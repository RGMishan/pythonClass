# -*- coding: utf-8 -*-
"""planetDetail.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Yjqml41NR7AJUGSatehPm-of0jVsDDP8
"""

import pandas as pd
from numpy import percentile
import statistics
from pandas import DataFrame as Df

import seaborn as sns
import matplotlib.pyplot as plt

df= pd.read_csv("C:\\Users\\Mishan RG\\Desktop\\planets.csv")

df

df.fillna(value= 0 ,inplace=True)

quartiles = percentile(df['distance'], [25, 50, 75])

df

maxes = Df(df['distance'].groupby(df['method']).max())

maxes

data_min, data_max = df['distance'].min(), df['distance'].max()

data_min, data_max

print('Min: %.3f' % data_min)
print('Q1: %.3f' % quartiles[0])
print('Median: %.3f' % quartiles[1])
print('Q3: %.3f' % quartiles[2])
print('Max: %.3f' % data_max)

Radial_Velocity = df[df['method']=='Radial Velocity']['distance']
Imaging = df[df['method']=='Imaging']['distance']
Echlipse = df[df['method']=='Eclipse Timing Variations']['distance']
Transit = df[df['method']=='Transit']['distance']

fig = plt.figure()
plt.figure(figsize=(16,8))
ax = fig.add_subplot(111)
ax.boxplot([Radial_Velocity,Imaging,Echlipse,Transit], labels=['Radial Velocity', 'Imaging','Eclipse','Transit'])

import matplotlib.pyplot as plt
import numpy as np

# An "interface" to matplotlib.axes.Axes.hist() method
n, bins, patches = plt.hist(x=df['distance'], bins='auto', color='#000',
                            alpha=0.95, rwidth=0.85)
plt.grid(axis='y', alpha=0.85)
plt.xlabel('Distance')
plt.ylabel('Frequency')
plt.title('Planet Histogram')
#plt.text(23, 45, r'$\mu=15, b=3$')
maxfreq = n.max()
# Set a clean upper y-axis limit.
plt.ylim(ymax=np.ceil(maxfreq / 10) * 10 if maxfreq % 10 else maxfreq + 10)

plt.scatter(df['mass'],df['distance'])
plt.xlabel('mass (kg)')
plt.ylabel('distance (km)')
plt.title('Planet dataset: mass vs distance')
plt.legend(loc='lower right')

plt.show()

d= df.drop('method',axis = 1)
plt.violinplot(d['number'])
plt.show()

sns.set(style="whitegrid")
tips = sns.load_dataset("planets")
ax = sns.swarmplot(x=tips["year"])



