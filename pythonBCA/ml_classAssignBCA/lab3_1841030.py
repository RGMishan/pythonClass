# -*- coding: utf-8 -*-
"""Lab3_1841030.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WlUguIxxUpYMiU605VJJTqur9MXeWe3O

Q.1 To demonstrate Naive Bayes classier on numeric data using GaussianNB
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

from sklearn.datasets import load_wine
data_numeric = load_wine()

#Converting the wine dataset into pandas DataFrame
data_numeric = pd.DataFrame(data=np.c_[data_numeric['data'],data_numeric['target']],
                            columns=data_numeric['feature_names']+['target'])

data_numeric.head()

data_numeric['target'].value_counts()

X_numeric = data_numeric.drop(['target'],axis=1)
y_numeric = data_numeric['target']

from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
X_train_numeric,X_test_numeric,y_train_numeric,y_test_numeric = train_test_split(X_numeric,y_numeric,test_size=0.2,random_state=50)

gaussian_model = GaussianNB()
gaussian_model.fit(X_train_numeric,y_train_numeric)
gaussian_model.score(X_train_numeric,y_train_numeric)

print("--                  -GAUSSIAN MODEL--                  --")
print("\nTRAIN ACCURACY : {}".format(gaussian_model.score(X_train_numeric,y_train_numeric)))
print("\nTEST ACCURACY : {}".format(gaussian_model.score(X_test_numeric,y_test_numeric)))

from sklearn.metrics import confusion_matrix
y_pred_numeric = gaussian_model.predict(X_test_numeric)
confusion_matrix(y_test_numeric,y_pred_numeric)

"""Q.2 To demonstrate Naive Bayes classier on nominal data using NominalNB function
Dataset - https://www.kaggle.com/uciml/mushroom-classication
"""

data_nominal =pd.read_csv('/content/mushrooms.csv')

data_nominal.head()

data_nominal.columns

data_nominal.shape

data_nominal['class'].value_counts()

X = data_nominal.drop(['class'],axis=1)
y = data_nominal['class']

cols = ['cap-shape', 'cap-surface', 'cap-color', 'bruises', 'odor',
 'gill-attachment', 'gill-spacing', 'gill-size', 'gill-color',
 'stalk-shape', 'stalk-root', 'stalk-surface-above-ring',
 'stalk-surface-below-ring', 'stalk-color-above-ring',
 'stalk-color-below-ring', 'veil-type', 'veil-color', 'ring-number',
 'ring-type', 'spore-print-color', 'population', 'habitat']

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
for col in cols:
 X[col]=le.fit_transform(X[col])

X.head()

from sklearn.naive_bayes import CategoricalNB
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=42)
model_nominal = CategoricalNB()
model_nominal.fit(X,y)
model_nominal.score(X_test,y_test)

print("--                --CATEGORICAL NAIVE BAYES MODEL--                     --")
print("\nTRAIN ACCURACY : {}".format(model_nominal.score(X_train,y_train)))
print("\nTEST ACCURACY : {}".format(model_nominal.score(X_test,y_test)))

from sklearn.metrics import confusion_matrix
y_pred_nominal = model_nominal.predict(X_test)
confusion_matrix(y_test,y_pred_nominal)